def generate_summary_text(daily_summary, weekly_summary, common_issues, engineer_workload):
    from datetime import datetime

    def format_date(date_obj):
        if isinstance(date_obj, str):
            try:
                date_obj = datetime.strptime(date_obj, "%Y-%m-%d %H:%M:%S")
            except ValueError:
                return str(date_obj)
        return date_obj.strftime("%B %d, %Y")

    try:
        most_frequent_issue = (
            f"{common_issues.iloc[0]['Issue Description']} "
            f"(reported {common_issues.iloc[0]['Count']} times)"
        )
    except (KeyError, IndexError):
        most_frequent_issue = "No issue description available."

    try:
        top_engineer = (
            f"{engineer_workload.iloc[0]['Engineer Name']} "
            f"with {engineer_workload.iloc[0]['Issues Handled']} issues resolved"
        )
    except (KeyError, IndexError):
        top_engineer = "No engineer performance data available."

    try:
        peak_day = format_date(daily_summary.loc[daily_summary['Issue Count'].idxmax(), 'Date'])
        peak_day_count = int(daily_summary['Issue Count'].max())
        avg_daily = round(daily_summary['Issue Count'].mean(), 1)
    except (KeyError, IndexError):
        peak_day = peak_day_count = avg_daily = "Data unavailable"

    try:
        peak_week = format_date(weekly_summary.loc[weekly_summary['Issue Count'].idxmax(), 'Week'])
        peak_week_count = int(weekly_summary['Issue Count'].max())
        avg_weekly = round(weekly_summary['Issue Count'].mean(), 1)
    except (KeyError, IndexError):
        peak_week = peak_week_count = avg_weekly = "Data unavailable"

    summary = f"""
## ðŸ“ˆ Weekly Issue Tracker Summary

This report provides a consolidated view of issue trends, common challenges, and engineer performance metrics.

---

### ðŸ”¹ Daily Trends
- **Peak Issue Day:** {peak_day} â€” {peak_day_count} issues reported.
- **Average Daily Issues:** {avg_daily} issues/day.

### ðŸ”¹ Weekly Trends
- **Peak Issue Week:** Starting {peak_week} â€” {peak_week_count} issues reported.
- **Average Weekly Issues:** {avg_weekly} issues/week.

### ðŸ”¹ Common Issues
- **Most Frequent Issue:** {most_frequent_issue}

### ðŸ”¹ Engineer Performance
- **Top Performing Engineer:** {top_engineer}

---

*This summary is auto-generated by GenSight to assist in identifying operational bottlenecks and recognizing top contributors.*
"""
    return summary
